#!/usr/bin/env bash

. $RERUN_MODULE_DIR/lib/functions.sh configure || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

source ${RERUN_MODULE_DIR}/commands/configure/functions.sh

function delete-vars-file {
  if [ ! -z ${DEIS_ID_DIR} ]; then
    rm -rf "${DEIS_ID_DIR}"
  fi
}

trap 'rerun_die $? "*** command failed: configure. ***"' ERR
trap 'delete-vars-file && echo && exit 1' INT TERM

set -eo nounset -o pipefail

rerun_options_parse "$@"

source-defaults

if [ -n "${FILE:-}" ]; then
  rerun_log warn "You are using a preconfigured Deis config file from ${FILE}:"
  update-link ${FILE}
  cat "${RIGGER_CURRENT_ENV}"
  load-env
else

  save-vars RIGGER_VARS_FILE DEIS_ID DEIS_ID_DIR DEISCTL_UNITS

  configure-platform-type

  if [ ${PRODUCT_TYPE} == "kubernetes" ]; then
    source "commands/configure/kubernetes-questions.sh"
  fi

  configure-user-type

  configure-go
  configure-deis-root

  source-config

  if [ ${DEIS_SOURCE} -ne 2 ]; then
    checkout-deis "${DEIS_ROOT}" "${DEIS_GIT_VERSION:-${VERSION}}"
  else
    (
      cd ${DEIS_ROOT}
      export DEIS_GIT_VERSION="$(git describe --long --dirty --abbrev=10 --tags --always)"
      export VERSION="${DEIS_GIT_VERSION}"
      save-vars DEIS_GIT_VERSION VERSION
    )
  fi

  choose-provider

  setup-provider "${PROVIDER:-}"

  configure-provider

  load-env "${RIGGER_VARS_FILE}"

  create-docker-env
  configure-registry
  activate-docker-machine-env

  configure-ssh

  configure-app-deployment

  configure-dns

  update-link "${RIGGER_VARS_FILE}"
fi

echo
rerun_log "Rigger has been configured on this system using ${RIGGER_VARS_FILE}"

cat <<EOF
To use the configuration outside of rigger, you can run:

  source "${RIGGER_VARS_FILE}"

EOF
