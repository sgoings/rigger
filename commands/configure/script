#!/usr/bin/env bash

. $RERUN_MODULE_DIR/lib/functions.sh configure || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

source ${RERUN_MODULE_DIR}/commands/configure/functions.sh

trap 'rerun_die $? "*** command failed: deis:configure. ***"' ERR

set -eo nounset -o pipefail

rerun_options_parse "$@"

source-defaults

if [ -n "${FILE:-}" ]; then
  rerun_log warn "You are using a preconfigured Deis config file from ${FILE}:"
  update-link ${FILE}
  cat "${DEIS_TEST_ENV}"
  load-env
else

  possible_vars=""

  configure-user-type possible_vars

  configure-go
  possible_vars+=" GOPATH"
  configure-deis-root
  possible_vars+=" DEIS_ROOT"

  source-config

  if [ ${DEIS_SOURCE} -ne 2 ]; then
    checkout-deis "${DEIS_ROOT}" "${DEIS_GIT_VERSION:-VERSION}"
  fi

  configure-provider
  possible_vars+=" PROVIDER"

  setup-provider "${PROVIDER:-}"

  # if platform is being built, we need a registry
  if [[ ${BUILD_TYPE:-} -eq 1 ]]; then
    configure-registry
    possible_vars+=" DEV_REGISTRY
                     IMAGE_PREFIX"
  fi

  # Consider making this a list + selection (+ ability to create a new key)
  configure-ssh
  possible_vars+=" DEIS_TEST_SSH_KEY"

  # Consider making this a list + selection (+ ability to create a new key)
  configure-app-deployment
  possible_vars+=" DEIS_TEST_AUTH_KEY"

  configure-dns
  possible_vars+=" DEIS_TEST_DOMAIN"

  save-env "${possible_vars}"
fi

echo
rerun_log "Rerun Deis has been configured on this system using ${DEIS_VARS_FILE}"

cat <<EOF
To use the configuration outside of Rerun, you can run:

  source "${DEIS_VARS_FILE}"

EOF
